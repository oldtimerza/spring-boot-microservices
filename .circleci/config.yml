# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      - setup_remote_docker

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      # run tests and package
      - run:
          name: Test and Package
          command: mvn package

  deploy:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout

      - setup_remote_docker

      - run:
          name: Build JAR
          command: mvn package

      - run:
          name: Build docker image
          command: mvn dockerfile:build

      - run:
          name: Create mvn settings file
          command: sed -e s/SECURE_PASSWORD/${SECURE_PASSWORD}/g .mvn/wrapper/settings.tmpl > .mvn/wrapper/settings.xml

      - run:
          name: Push docker image
          command: mvn -s .mvn/wrapper/settings.xml dockerfile:push

      - run:
          name: Create kubeconfig
          command: |
            sed -e 's/CERT_AUTH/${CERT_AUTH}/g;s/SERVER/${SERVER}/g;s/CLIENT_CERT/${CLIENT_CERT}/g;s/CLIENT_KEY/${CLIENT_KEY}/g' infrastructure-as-code/config/kubeconfig.tmpl > infrastructure-as-code/config/kubeconfig.xml

      - run:
          name: Set access to setup-kubectl.sh
          command: |
            chmod +x ./infrastructure-as-code/setup/setup-kubectl.sh

      - run:
          name: Setup kubectl
          command: |
            ./infrastructure-as-code/setup/setup-kubectl.sh

      - run:
          name: Set access to setup-cluster.sh
          command: |
            chmod +x ./infrastructure-as-code/setup/setup-cluster.sh

      - run:
          name: Run kubectl deployment and service setup
          command: |
            ./infrastructure-as-code/setup/setup-cluster.sh

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master